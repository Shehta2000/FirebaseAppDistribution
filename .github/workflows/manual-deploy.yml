name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to deploy'
        required: true
        default: 'both'
        type: choice
        options:
          - android
          - ios
          - both
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      release_notes:
        description: 'Release notes'
        required: false
        default: 'Manual deployment'
        type: string

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  manual-deploy:
    name: Manual Deploy - ${{ github.event.inputs.platform }} to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        if: github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build Android
        if: github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both'
        run: |
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            flutter build appbundle --release
          else
            flutter build apk --release
          fi

      - name: Deploy Android to Firebase
        if: (github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both') && github.event.inputs.environment == 'staging'
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: |
            üöÄ Manual Deployment
            
            Platform: Android
            Environment: ${{ github.event.inputs.environment }}
            Notes: ${{ github.event.inputs.release_notes }}
            
            Deployed by: ${{ github.actor }}
            Commit: ${{ github.sha }}

      - name: Deploy Android to Play Store
        if: (github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both') && github.event.inputs.environment == 'production'
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.example.firebase_app_distribution
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal
          status: completed

      - name: Notify deployment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '‚úÖ' : '‚ùå';
            const title = `${status} Manual Deployment ${${{ job.status }}' === 'success' ? 'Successful' : 'Failed'}`;
            
            core.notice(`${title} - Platform: ${{ github.event.inputs.platform }}, Environment: ${{ github.event.inputs.environment }}`);
